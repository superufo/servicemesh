// Code generated by protoc-gen-go. DO NOT EDIT.
// source: XfcUser.proto

package xfcuser

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserSelectRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Mobile               string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserSelectRequest) Reset()         { *m = UserSelectRequest{} }
func (m *UserSelectRequest) String() string { return proto.CompactTextString(m) }
func (*UserSelectRequest) ProtoMessage()    {}
func (*UserSelectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{0}
}

func (m *UserSelectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserSelectRequest.Unmarshal(m, b)
}
func (m *UserSelectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserSelectRequest.Marshal(b, m, deterministic)
}
func (m *UserSelectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserSelectRequest.Merge(m, src)
}
func (m *UserSelectRequest) XXX_Size() int {
	return xxx_messageInfo_UserSelectRequest.Size(m)
}
func (m *UserSelectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserSelectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserSelectRequest proto.InternalMessageInfo

func (m *UserSelectRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserSelectRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserSelectRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserSelectRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UserReply struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Nick                 string   `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	Mobile               string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Post                 string   `protobuf:"bytes,7,opt,name=post,proto3" json:"post,omitempty"`
	TeamId               int32    `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName             string   `protobuf:"bytes,9,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	Introduce            string   `protobuf:"bytes,10,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Department           string   `protobuf:"bytes,11,opt,name=department,proto3" json:"department,omitempty"`
	DepartmentId         int32    `protobuf:"varint,12,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Balance              float64  `protobuf:"fixed64,13,opt,name=balance,proto3" json:"balance,omitempty"`
	FreezeBalance        float64  `protobuf:"fixed64,14,opt,name=freeze_balance,json=freezeBalance,proto3" json:"freeze_balance,omitempty"`
	RealBalance          float64  `protobuf:"fixed64,15,opt,name=real_balance,json=realBalance,proto3" json:"real_balance,omitempty"`
	RoleId               int32    `protobuf:"varint,16,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReply) Reset()         { *m = UserReply{} }
func (m *UserReply) String() string { return proto.CompactTextString(m) }
func (*UserReply) ProtoMessage()    {}
func (*UserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{1}
}

func (m *UserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReply.Unmarshal(m, b)
}
func (m *UserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReply.Marshal(b, m, deterministic)
}
func (m *UserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReply.Merge(m, src)
}
func (m *UserReply) XXX_Size() int {
	return xxx_messageInfo_UserReply.Size(m)
}
func (m *UserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserReply proto.InternalMessageInfo

func (m *UserReply) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserReply) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserReply) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *UserReply) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *UserReply) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserReply) GetPost() string {
	if m != nil {
		return m.Post
	}
	return ""
}

func (m *UserReply) GetTeamId() int32 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *UserReply) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *UserReply) GetIntroduce() string {
	if m != nil {
		return m.Introduce
	}
	return ""
}

func (m *UserReply) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

func (m *UserReply) GetDepartmentId() int32 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *UserReply) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *UserReply) GetFreezeBalance() float64 {
	if m != nil {
		return m.FreezeBalance
	}
	return 0
}

func (m *UserReply) GetRealBalance() float64 {
	if m != nil {
		return m.RealBalance
	}
	return 0
}

func (m *UserReply) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type AuthRequest struct {
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthRequest) Reset()         { *m = AuthRequest{} }
func (m *AuthRequest) String() string { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()    {}
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{2}
}

func (m *AuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthRequest.Unmarshal(m, b)
}
func (m *AuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthRequest.Marshal(b, m, deterministic)
}
func (m *AuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthRequest.Merge(m, src)
}
func (m *AuthRequest) XXX_Size() int {
	return xxx_messageInfo_AuthRequest.Size(m)
}
func (m *AuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AuthRequest proto.InternalMessageInfo

func (m *AuthRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AuthRequest) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

type UserReplyToken struct {
	UserReply            *UserReply `protobuf:"bytes,1,opt,name=userReply,proto3" json:"userReply,omitempty"`
	Token                string     `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UserReplyToken) Reset()         { *m = UserReplyToken{} }
func (m *UserReplyToken) String() string { return proto.CompactTextString(m) }
func (*UserReplyToken) ProtoMessage()    {}
func (*UserReplyToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{3}
}

func (m *UserReplyToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReplyToken.Unmarshal(m, b)
}
func (m *UserReplyToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReplyToken.Marshal(b, m, deterministic)
}
func (m *UserReplyToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReplyToken.Merge(m, src)
}
func (m *UserReplyToken) XXX_Size() int {
	return xxx_messageInfo_UserReplyToken.Size(m)
}
func (m *UserReplyToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReplyToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserReplyToken proto.InternalMessageInfo

func (m *UserReplyToken) GetUserReply() *UserReply {
	if m != nil {
		return m.UserReply
	}
	return nil
}

func (m *UserReplyToken) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UserDeleteRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDeleteRequest) Reset()         { *m = UserDeleteRequest{} }
func (m *UserDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*UserDeleteRequest) ProtoMessage()    {}
func (*UserDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{4}
}

func (m *UserDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDeleteRequest.Unmarshal(m, b)
}
func (m *UserDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDeleteRequest.Marshal(b, m, deterministic)
}
func (m *UserDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDeleteRequest.Merge(m, src)
}
func (m *UserDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_UserDeleteRequest.Size(m)
}
func (m *UserDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserDeleteRequest proto.InternalMessageInfo

func (m *UserDeleteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UserDeleteReply struct {
	Flag                 bool     `protobuf:"varint,1,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserDeleteReply) Reset()         { *m = UserDeleteReply{} }
func (m *UserDeleteReply) String() string { return proto.CompactTextString(m) }
func (*UserDeleteReply) ProtoMessage()    {}
func (*UserDeleteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{5}
}

func (m *UserDeleteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserDeleteReply.Unmarshal(m, b)
}
func (m *UserDeleteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserDeleteReply.Marshal(b, m, deterministic)
}
func (m *UserDeleteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserDeleteReply.Merge(m, src)
}
func (m *UserDeleteReply) XXX_Size() int {
	return xxx_messageInfo_UserDeleteReply.Size(m)
}
func (m *UserDeleteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UserDeleteReply.DiscardUnknown(m)
}

var xxx_messageInfo_UserDeleteReply proto.InternalMessageInfo

func (m *UserDeleteReply) GetFlag() bool {
	if m != nil {
		return m.Flag
	}
	return false
}

type UserRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Nick                 string   `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	Mobile               string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Post                 string   `protobuf:"bytes,7,opt,name=post,proto3" json:"post,omitempty"`
	TeamId               int32    `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName             string   `protobuf:"bytes,9,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	Introduce            string   `protobuf:"bytes,10,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Department           string   `protobuf:"bytes,11,opt,name=department,proto3" json:"department,omitempty"`
	DepartmentId         int32    `protobuf:"varint,12,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Balance              float64  `protobuf:"fixed64,13,opt,name=balance,proto3" json:"balance,omitempty"`
	FreezeBalance        float64  `protobuf:"fixed64,14,opt,name=freeze_balance,json=freezeBalance,proto3" json:"freeze_balance,omitempty"`
	RealBalance          float64  `protobuf:"fixed64,15,opt,name=real_balance,json=realBalance,proto3" json:"real_balance,omitempty"`
	RoleId               int32    `protobuf:"varint,16,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{6}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserRequest) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *UserRequest) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *UserRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserRequest) GetPost() string {
	if m != nil {
		return m.Post
	}
	return ""
}

func (m *UserRequest) GetTeamId() int32 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *UserRequest) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *UserRequest) GetIntroduce() string {
	if m != nil {
		return m.Introduce
	}
	return ""
}

func (m *UserRequest) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

func (m *UserRequest) GetDepartmentId() int32 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *UserRequest) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *UserRequest) GetFreezeBalance() float64 {
	if m != nil {
		return m.FreezeBalance
	}
	return 0
}

func (m *UserRequest) GetRealBalance() float64 {
	if m != nil {
		return m.RealBalance
	}
	return 0
}

func (m *UserRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type UserUpdateRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Passwd               string   `protobuf:"bytes,3,opt,name=passwd,proto3" json:"passwd,omitempty"`
	Nick                 string   `protobuf:"bytes,4,opt,name=nick,proto3" json:"nick,omitempty"`
	Mobile               string   `protobuf:"bytes,5,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Post                 string   `protobuf:"bytes,7,opt,name=post,proto3" json:"post,omitempty"`
	TeamId               int32    `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamName             string   `protobuf:"bytes,9,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	Introduce            string   `protobuf:"bytes,10,opt,name=introduce,proto3" json:"introduce,omitempty"`
	Department           string   `protobuf:"bytes,11,opt,name=department,proto3" json:"department,omitempty"`
	DepartmentId         int32    `protobuf:"varint,12,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	Balance              float64  `protobuf:"fixed64,13,opt,name=balance,proto3" json:"balance,omitempty"`
	FreezeBalance        float64  `protobuf:"fixed64,14,opt,name=freeze_balance,json=freezeBalance,proto3" json:"freeze_balance,omitempty"`
	RealBalance          float64  `protobuf:"fixed64,15,opt,name=real_balance,json=realBalance,proto3" json:"real_balance,omitempty"`
	RoleId               int32    `protobuf:"varint,16,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserUpdateRequest) Reset()         { *m = UserUpdateRequest{} }
func (m *UserUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UserUpdateRequest) ProtoMessage()    {}
func (*UserUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{7}
}

func (m *UserUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserUpdateRequest.Unmarshal(m, b)
}
func (m *UserUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserUpdateRequest.Marshal(b, m, deterministic)
}
func (m *UserUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserUpdateRequest.Merge(m, src)
}
func (m *UserUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UserUpdateRequest.Size(m)
}
func (m *UserUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserUpdateRequest proto.InternalMessageInfo

func (m *UserUpdateRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserUpdateRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserUpdateRequest) GetPasswd() string {
	if m != nil {
		return m.Passwd
	}
	return ""
}

func (m *UserUpdateRequest) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *UserUpdateRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserUpdateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserUpdateRequest) GetPost() string {
	if m != nil {
		return m.Post
	}
	return ""
}

func (m *UserUpdateRequest) GetTeamId() int32 {
	if m != nil {
		return m.TeamId
	}
	return 0
}

func (m *UserUpdateRequest) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *UserUpdateRequest) GetIntroduce() string {
	if m != nil {
		return m.Introduce
	}
	return ""
}

func (m *UserUpdateRequest) GetDepartment() string {
	if m != nil {
		return m.Department
	}
	return ""
}

func (m *UserUpdateRequest) GetDepartmentId() int32 {
	if m != nil {
		return m.DepartmentId
	}
	return 0
}

func (m *UserUpdateRequest) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *UserUpdateRequest) GetFreezeBalance() float64 {
	if m != nil {
		return m.FreezeBalance
	}
	return 0
}

func (m *UserUpdateRequest) GetRealBalance() float64 {
	if m != nil {
		return m.RealBalance
	}
	return 0
}

func (m *UserUpdateRequest) GetRoleId() int32 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

type SearchRequest struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	PageNumber           int32    `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32    `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{8}
}

func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (m *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(m, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *SearchRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

type MultiUserReply struct {
	Total                int32        `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	UserReply            []*UserReply `protobuf:"bytes,2,rep,name=userReply,proto3" json:"userReply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *MultiUserReply) Reset()         { *m = MultiUserReply{} }
func (m *MultiUserReply) String() string { return proto.CompactTextString(m) }
func (*MultiUserReply) ProtoMessage()    {}
func (*MultiUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{9}
}

func (m *MultiUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiUserReply.Unmarshal(m, b)
}
func (m *MultiUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiUserReply.Marshal(b, m, deterministic)
}
func (m *MultiUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiUserReply.Merge(m, src)
}
func (m *MultiUserReply) XXX_Size() int {
	return xxx_messageInfo_MultiUserReply.Size(m)
}
func (m *MultiUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_MultiUserReply proto.InternalMessageInfo

func (m *MultiUserReply) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *MultiUserReply) GetUserReply() []*UserReply {
	if m != nil {
		return m.UserReply
	}
	return nil
}

type TokenInfo struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenInfo) Reset()         { *m = TokenInfo{} }
func (m *TokenInfo) String() string { return proto.CompactTextString(m) }
func (*TokenInfo) ProtoMessage()    {}
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{10}
}

func (m *TokenInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenInfo.Unmarshal(m, b)
}
func (m *TokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenInfo.Marshal(b, m, deterministic)
}
func (m *TokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenInfo.Merge(m, src)
}
func (m *TokenInfo) XXX_Size() int {
	return xxx_messageInfo_TokenInfo.Size(m)
}
func (m *TokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TokenInfo proto.InternalMessageInfo

func (m *TokenInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UserToken struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Nick                 string   `protobuf:"bytes,3,opt,name=nick,proto3" json:"nick,omitempty"`
	Mobile               string   `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Post                 string   `protobuf:"bytes,6,opt,name=post,proto3" json:"post,omitempty"`
	Role                 int32    `protobuf:"varint,7,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserToken) Reset()         { *m = UserToken{} }
func (m *UserToken) String() string { return proto.CompactTextString(m) }
func (*UserToken) ProtoMessage()    {}
func (*UserToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_1ac16a8af628dfa8, []int{11}
}

func (m *UserToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserToken.Unmarshal(m, b)
}
func (m *UserToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserToken.Marshal(b, m, deterministic)
}
func (m *UserToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserToken.Merge(m, src)
}
func (m *UserToken) XXX_Size() int {
	return xxx_messageInfo_UserToken.Size(m)
}
func (m *UserToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UserToken.DiscardUnknown(m)
}

var xxx_messageInfo_UserToken proto.InternalMessageInfo

func (m *UserToken) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserToken) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserToken) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

func (m *UserToken) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserToken) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserToken) GetPost() string {
	if m != nil {
		return m.Post
	}
	return ""
}

func (m *UserToken) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func init() {
	proto.RegisterType((*UserSelectRequest)(nil), "xfcuser.UserSelectRequest")
	proto.RegisterType((*UserReply)(nil), "xfcuser.UserReply")
	proto.RegisterType((*AuthRequest)(nil), "xfcuser.AuthRequest")
	proto.RegisterType((*UserReplyToken)(nil), "xfcuser.UserReplyToken")
	proto.RegisterType((*UserDeleteRequest)(nil), "xfcuser.UserDeleteRequest")
	proto.RegisterType((*UserDeleteReply)(nil), "xfcuser.UserDeleteReply")
	proto.RegisterType((*UserRequest)(nil), "xfcuser.UserRequest")
	proto.RegisterType((*UserUpdateRequest)(nil), "xfcuser.UserUpdateRequest")
	proto.RegisterType((*SearchRequest)(nil), "xfcuser.SearchRequest")
	proto.RegisterType((*MultiUserReply)(nil), "xfcuser.MultiUserReply")
	proto.RegisterType((*TokenInfo)(nil), "xfcuser.TokenInfo")
	proto.RegisterType((*UserToken)(nil), "xfcuser.UserToken")
}

func init() { proto.RegisterFile("XfcUser.proto", fileDescriptor_1ac16a8af628dfa8) }

var fileDescriptor_1ac16a8af628dfa8 = []byte{
	// 730 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x5d, 0x6b, 0x13, 0x4d,
	0x14, 0xee, 0x36, 0xd9, 0xa4, 0x39, 0xf9, 0xe8, 0xdb, 0x21, 0xb4, 0x4b, 0x5f, 0xd1, 0x74, 0xb5,
	0xd2, 0x0b, 0x09, 0x52, 0xc1, 0x2b, 0x41, 0x0c, 0x4a, 0x09, 0x68, 0x09, 0x5b, 0x2b, 0xbd, 0x0b,
	0x93, 0xdd, 0x93, 0xb8, 0x74, 0xbf, 0x3a, 0x3b, 0x4b, 0x8d, 0xbf, 0xc3, 0x7f, 0xe1, 0xef, 0x10,
	0xaf, 0xfc, 0x4f, 0x32, 0x33, 0xfb, 0x59, 0x53, 0xc5, 0x7a, 0x21, 0x42, 0xef, 0xe6, 0x3c, 0xf3,
	0xec, 0x9c, 0x67, 0xe6, 0x3c, 0x7b, 0x66, 0xa0, 0x7b, 0x36, 0xb7, 0x4f, 0x63, 0x64, 0xc3, 0x88,
	0x85, 0x3c, 0x24, 0xcd, 0x0f, 0x73, 0x3b, 0x89, 0x91, 0x99, 0x97, 0xb0, 0x25, 0xe0, 0x13, 0xf4,
	0xd0, 0xe6, 0x16, 0x5e, 0x24, 0x18, 0x73, 0xb2, 0x03, 0x4d, 0x31, 0x39, 0x75, 0x1d, 0x43, 0x1b,
	0x68, 0x07, 0xba, 0xd5, 0x10, 0xe1, 0xd8, 0x21, 0xff, 0x43, 0x4b, 0x4e, 0x04, 0xd4, 0x47, 0x63,
	0x7d, 0xa0, 0x1d, 0xb4, 0xac, 0x0d, 0x01, 0x1c, 0x53, 0x1f, 0xc9, 0x36, 0x34, 0xfc, 0x70, 0xe6,
	0x7a, 0x68, 0xe8, 0x72, 0x26, 0x8d, 0x48, 0x1f, 0x74, 0xf4, 0xa9, 0xeb, 0x19, 0x0d, 0x09, 0xab,
	0xc0, 0xfc, 0x52, 0x83, 0x96, 0xc8, 0x6c, 0x61, 0xe4, 0x2d, 0x6f, 0x9e, 0x31, 0xa2, 0x71, 0x7c,
	0xe9, 0x18, 0x35, 0x95, 0x51, 0x45, 0x84, 0x40, 0x3d, 0x70, 0xed, 0x73, 0xa3, 0x2e, 0x51, 0x39,
	0xfe, 0x3d, 0x75, 0x62, 0x85, 0x28, 0x8c, 0xb9, 0xd1, 0x54, 0x2b, 0x88, 0xb1, 0xd0, 0xc8, 0x91,
	0xfa, 0x42, 0xe3, 0x86, 0xd2, 0x28, 0x42, 0xa5, 0x51, 0x4e, 0x48, 0x8d, 0x2d, 0xa5, 0x51, 0x00,
	0x52, 0xe3, 0x1d, 0x68, 0xb9, 0x01, 0x67, 0xa1, 0x93, 0xd8, 0x68, 0x80, 0x9c, 0x2c, 0x00, 0x72,
	0x17, 0xc0, 0xc1, 0x88, 0x32, 0xee, 0x63, 0xc0, 0x8d, 0xb6, 0x9c, 0x2e, 0x21, 0xe4, 0x3e, 0x74,
	0x8b, 0x48, 0x64, 0xee, 0xc8, 0xcc, 0x9d, 0x02, 0x1c, 0x3b, 0xc4, 0x80, 0xe6, 0x8c, 0x7a, 0x34,
	0xb0, 0xd1, 0xe8, 0x0e, 0xb4, 0x03, 0xcd, 0xca, 0x42, 0xb2, 0x0f, 0xbd, 0x39, 0x43, 0xfc, 0x88,
	0xd3, 0x8c, 0xd0, 0x93, 0x84, 0xae, 0x42, 0x47, 0x29, 0x6d, 0x0f, 0x3a, 0x0c, 0xa9, 0x97, 0x93,
	0x36, 0x25, 0xa9, 0x2d, 0xb0, 0x8c, 0xb2, 0x03, 0x4d, 0x16, 0x7a, 0x28, 0x24, 0xfc, 0xa7, 0x36,
	0x2f, 0xc2, 0xb1, 0x63, 0x8e, 0xa0, 0xfd, 0x22, 0xe1, 0xef, 0x33, 0xeb, 0xdc, 0xa4, 0x5e, 0xe6,
	0x19, 0xf4, 0x72, 0x2b, 0xbc, 0x0d, 0xcf, 0x31, 0x20, 0x8f, 0xd5, 0x32, 0x12, 0x91, 0x8e, 0x68,
	0x1f, 0x92, 0x61, 0xea, 0xd9, 0x61, 0xce, 0xb5, 0x0a, 0x92, 0xa8, 0x23, 0x17, 0x9f, 0xa6, 0x49,
	0x55, 0x60, 0x3e, 0x52, 0xf6, 0x7e, 0x89, 0x1e, 0x72, 0xbc, 0xc6, 0xde, 0xad, 0xcc, 0x6c, 0xe6,
	0x3e, 0x6c, 0x96, 0xd9, 0x62, 0x59, 0x02, 0xf5, 0xb9, 0x47, 0x17, 0x92, 0xb8, 0x61, 0xc9, 0xb1,
	0xf9, 0xb5, 0x06, 0x6d, 0xa5, 0xe1, 0x0f, 0x7f, 0x97, 0x5b, 0xf3, 0xfe, 0x65, 0xf3, 0x7e, 0xab,
	0x29, 0x7f, 0x9c, 0x46, 0x0e, 0xbd, 0xd6, 0x1f, 0xb7, 0xf5, 0xfc, 0x67, 0xea, 0x19, 0x40, 0xf7,
	0x04, 0x29, 0xb3, 0xf3, 0x76, 0xd4, 0x07, 0xfd, 0x22, 0x41, 0xb6, 0x4c, 0x7f, 0x74, 0x15, 0x90,
	0x7b, 0xd0, 0x8e, 0xe8, 0x02, 0xa7, 0x41, 0xe2, 0xcf, 0x90, 0xc9, 0x4a, 0xea, 0x16, 0x08, 0xe8,
	0x58, 0x22, 0xe4, 0x21, 0x6c, 0x32, 0x8c, 0x13, 0x8f, 0x4f, 0x23, 0x64, 0x53, 0x31, 0x21, 0x8b,
	0xaa, 0x5b, 0x5d, 0x05, 0x4f, 0x90, 0x4d, 0xe8, 0x02, 0x45, 0xe3, 0x7a, 0x93, 0x78, 0xdc, 0x3d,
	0xad, 0xb6, 0x21, 0x4e, 0xbd, 0xd4, 0x39, 0x2a, 0xa8, 0xb6, 0xb3, 0xf5, 0x41, 0xed, 0x97, 0xed,
	0xcc, 0xdc, 0x83, 0x96, 0xec, 0x84, 0xe3, 0x60, 0x1e, 0x16, 0xbd, 0x4d, 0x2b, 0xf7, 0xb6, 0xcf,
	0x9a, 0xba, 0x41, 0x55, 0xc7, 0xbc, 0x99, 0x69, 0x33, 0x73, 0xd6, 0x56, 0x9a, 0xb3, 0xbe, 0xda,
	0x9c, 0xfa, 0x2a, 0x73, 0x36, 0x4a, 0xe6, 0x24, 0x50, 0x17, 0x05, 0x91, 0x86, 0xd5, 0x2d, 0x39,
	0x3e, 0xfc, 0x54, 0x83, 0x66, 0xfa, 0x06, 0x21, 0x23, 0xe8, 0x1d, 0x21, 0x4f, 0x23, 0xb9, 0xc3,
	0xdd, 0xca, 0x69, 0x54, 0x5e, 0x23, 0xbb, 0x2b, 0x4e, 0xca, 0x5c, 0x23, 0xcf, 0xd4, 0xe6, 0x5f,
	0x87, 0x0b, 0x37, 0x20, 0xfd, 0x9c, 0x52, 0xba, 0x8b, 0x76, 0x77, 0x7e, 0xfc, 0x50, 0x9e, 0x95,
	0xb9, 0x46, 0x9e, 0x02, 0x08, 0xec, 0x1d, 0x32, 0x77, 0xbe, 0x24, 0x45, 0x86, 0xfc, 0xcc, 0xaf,
	0x64, 0xcd, 0xbe, 0x3b, 0x02, 0x52, 0x28, 0x1f, 0x2d, 0x95, 0x50, 0xb2, 0x9d, 0x73, 0x2b, 0xee,
	0x2b, 0x09, 0xa8, 0xba, 0xc4, 0x5c, 0x23, 0xcf, 0x61, 0x4b, 0x35, 0x9d, 0xf2, 0x29, 0xf4, 0xaf,
	0x08, 0xfe, 0xd9, 0xfe, 0x5f, 0xc1, 0x96, 0xba, 0xa7, 0xae, 0x3f, 0xc6, 0xca, 0xad, 0xb7, 0x7a,
	0x99, 0xd1, 0x03, 0x20, 0x6e, 0x38, 0x5c, 0xb0, 0xc8, 0x1e, 0x46, 0xb3, 0x8c, 0x31, 0xea, 0xa4,
	0x8b, 0x4e, 0xc4, 0x63, 0x71, 0xa2, 0xcd, 0x1a, 0xf2, 0xd5, 0xf8, 0xe4, 0x7b, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xb6, 0x8f, 0x2e, 0xb6, 0x46, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// XfcUserClient is the client API for XfcUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type XfcUserClient interface {
	// Sends a greeting
	GetXfcUserInfo(ctx context.Context, in *UserSelectRequest, opts ...grpc.CallOption) (*UserReply, error)
	UserLogin(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*UserReplyToken, error)
	UserVerify(ctx context.Context, in *TokenInfo, opts ...grpc.CallOption) (*UserToken, error)
	GetXfcUserBySelect(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*MultiUserReply, error)
	UpdateXfcUserInfo(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error)
	DeleteXfcUserInfo(ctx context.Context, in *UserDeleteRequest, opts ...grpc.CallOption) (*UserReply, error)
}

type xfcUserClient struct {
	cc grpc.ClientConn
}

func NewXfcUserClient(cc grpc.ClientConn) XfcUserClient {
	return &xfcUserClient{cc}
}

func (c *xfcUserClient) GetXfcUserInfo(ctx context.Context, in *UserSelectRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/xfcuser.XfcUser/GetXfcUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xfcUserClient) UserLogin(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*UserReplyToken, error) {
	out := new(UserReplyToken)
	err := c.cc.Invoke(ctx, "/xfcuser.XfcUser/UserLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xfcUserClient) UserVerify(ctx context.Context, in *TokenInfo, opts ...grpc.CallOption) (*UserToken, error) {
	out := new(UserToken)
	err := c.cc.Invoke(ctx, "/xfcuser.XfcUser/UserVerify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xfcUserClient) GetXfcUserBySelect(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*MultiUserReply, error) {
	out := new(MultiUserReply)
	err := c.cc.Invoke(ctx, "/xfcuser.XfcUser/GetXfcUserBySelect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xfcUserClient) UpdateXfcUserInfo(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/xfcuser.XfcUser/UpdateXfcUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *xfcUserClient) DeleteXfcUserInfo(ctx context.Context, in *UserDeleteRequest, opts ...grpc.CallOption) (*UserReply, error) {
	out := new(UserReply)
	err := c.cc.Invoke(ctx, "/xfcuser.XfcUser/DeleteXfcUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// XfcUserServer is the server API for XfcUser service.
type XfcUserServer interface {
	// Sends a greeting
	GetXfcUserInfo(context.Context, *UserSelectRequest) (*UserReply, error)
	UserLogin(context.Context, *AuthRequest) (*UserReplyToken, error)
	UserVerify(context.Context, *TokenInfo) (*UserToken, error)
	GetXfcUserBySelect(context.Context, *SearchRequest) (*MultiUserReply, error)
	UpdateXfcUserInfo(context.Context, *UserRequest) (*UserReply, error)
	DeleteXfcUserInfo(context.Context, *UserDeleteRequest) (*UserReply, error)
}

// UnimplementedXfcUserServer can be embedded to have forward compatible implementations.
type UnimplementedXfcUserServer struct {
}

func (*UnimplementedXfcUserServer) GetXfcUserInfo(ctx context.Context, req *UserSelectRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetXfcUserInfo not implemented")
}
func (*UnimplementedXfcUserServer) UserLogin(ctx context.Context, req *AuthRequest) (*UserReplyToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserLogin not implemented")
}
func (*UnimplementedXfcUserServer) UserVerify(ctx context.Context, req *TokenInfo) (*UserToken, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserVerify not implemented")
}
func (*UnimplementedXfcUserServer) GetXfcUserBySelect(ctx context.Context, req *SearchRequest) (*MultiUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetXfcUserBySelect not implemented")
}
func (*UnimplementedXfcUserServer) UpdateXfcUserInfo(ctx context.Context, req *UserRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateXfcUserInfo not implemented")
}
func (*UnimplementedXfcUserServer) DeleteXfcUserInfo(ctx context.Context, req *UserDeleteRequest) (*UserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteXfcUserInfo not implemented")
}

func RegisterXfcUserServer(s *grpc.Server, srv XfcUserServer) {
	s.RegisterService(&XfcUser_serviceDesc, srv)
}

func XfcUser_GetXfcUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserSelectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XfcUserServer).GetXfcUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xfcuser.XfcUser/GetXfcUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XfcUserServer).GetXfcUserInfo(ctx, req.(*UserSelectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func XfcUser_UserLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XfcUserServer).UserLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xfcuser.XfcUser/UserLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XfcUserServer).UserLogin(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func XfcUser_UserVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XfcUserServer).UserVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xfcuser.XfcUser/UserVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XfcUserServer).UserVerify(ctx, req.(*TokenInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func XfcUser_GetXfcUserBySelect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XfcUserServer).GetXfcUserBySelect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xfcuser.XfcUser/GetXfcUserBySelect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XfcUserServer).GetXfcUserBySelect(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func XfcUser_UpdateXfcUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XfcUserServer).UpdateXfcUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xfcuser.XfcUser/UpdateXfcUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XfcUserServer).UpdateXfcUserInfo(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func XfcUser_DeleteXfcUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(XfcUserServer).DeleteXfcUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/xfcuser.XfcUser/DeleteXfcUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(XfcUserServer).DeleteXfcUserInfo(ctx, req.(*UserDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var XfcUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xfcuser.XfcUser",
	HandlerType: (*XfcUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetXfcUserInfo",
			Handler:    XfcUser_GetXfcUserInfo_Handler,
		},
		{
			MethodName: "UserLogin",
			Handler:    XfcUser_UserLogin_Handler,
		},
		{
			MethodName: "UserVerify",
			Handler:    XfcUser_UserVerify_Handler,
		},
		{
			MethodName: "GetXfcUserBySelect",
			Handler:    XfcUser_GetXfcUserBySelect_Handler,
		},
		{
			MethodName: "UpdateXfcUserInfo",
			Handler:    XfcUser_UpdateXfcUserInfo_Handler,
		},
		{
			MethodName: "DeleteXfcUserInfo",
			Handler:    XfcUser_DeleteXfcUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "XfcUser.proto",
}
