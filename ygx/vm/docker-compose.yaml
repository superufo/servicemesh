version: '3'
services:
  redis:
    image: redis:${REDIS_VERSION}
    container_name: redis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default    

  mongo:
    image: mongo:3.4
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: kie
      MONGO_INITDB_ROOT_USERNAME: kie
      MONGO_INITDB_ROOT_PASSWORD: 123
    volumes:
      - ./db.js:/docker-entrypoint-initdb.d/db.js:ro
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: kie
      ME_CONFIG_MONGODB_ADMINPASSWORD: 123
  servicecomb-kie:
    image: servicecomb/kie:0.1.0
    restart: always
    ports:
      - 30110:30110
    environment:
      MONGODB_USER: kie
      MONGODB_PWD: 123
      MONGODB_ADDR: mongo

  ##  docker network create --subnet=172.80.0.0/16   etcdnetwork
  ########################  172.80.0.4   etcd3 集群 start#################################
  etcd-1:
    container_name: etcd1
    image: quay.io/coreos/etcd:v3.3
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-1'
      - '--initial-advertise-peer-urls=http://etcd-1:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-1:2379'
      - '--initial-cluster-token=mys3cr3ttok3n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - "2379:2379"
      - "2380:2380"
    expose:
      - "2379"
      - "2380"
    volumes:
      - etcd1:/etcd_data
    networks:
      default:
        ipv4_address: 172.80.0.100

  ## 172.80.0.5
  etcd-2:
    container_name: etcd2
    image: quay.io/coreos/etcd:v3.3
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-2'
      - '--initial-advertise-peer-urls=http://etcd-2:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-2:2379'
      - '--initial-cluster-token=mys3cr3ttok3n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - "2479:2379"
      - "2480:2380"
    expose:
      - "2379"
      - "2380"
    volumes:
      - etcd2:/etcd_data
    networks:
      default:
        ipv4_address: 172.80.0.101

  # 172.80.0.6
  etcd-3:
    container_name: etcd3
    image: quay.io/coreos/etcd:v3.3
    entrypoint: /usr/local/bin/etcd
    command:
      - '--name=etcd-3'
      - '--initial-advertise-peer-urls=http://etcd-3:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--advertise-client-urls=http://etcd-3:2379'
      - '--initial-cluster-token=mys3cr3ttok3n'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster=etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380'
      - '--initial-cluster-state=new'
    ports:
      - "2579:2379"
      - "2580:2380"
    expose:
      - "2379"
      - "2380"
    volumes:
      - etcd3:/etcd_data
    networks:
      default:
        ipv4_address: 172.80.0.102
  ########################  172.80.0.4   etcd3 集群 end#################################

  ########################  service-center 集群 start#################################
  service-center:
    depends_on:
      - etcd-1
    #image: 'coollyj/servicecenter:1.3.0.1'
    build: ./docker/servicecenter
    hostname: servicecenter103
    ports:
      - "30100:30100"
    expose:
      - "30100"
    environment:
      BACKEND_ADDRESS: etcd-1:2379,etcd-2:2379,etcd-3:2379
      IP_ADDRESS: 172.80.0.103
    networks:
      default:
        ipv4_address: 172.80.0.103

  service-center1:
    depends_on:
      - etcd-2
      - etcd-3
    #image: 'coollyj/servicecenter:1.3.0.1'
    build: ./docker/servicecenter
    hostname: servicecenter104
    ports:
      - "30101:30100"
    expose:
      - "30100"
    networks:
      default:
        ipv4_address: 172.80.0.104
    environment:
      BACKEND_ADDRESS: etcd-1:2379,etcd-2:2379,etcd-3:2379
      IP_ADDRESS: 172.80.0.104

  scfrontend:
    depends_on:
      - service-center
    image: 'servicecomb/scfrontend:latest'
    links:
      - service-center
    ports:
      - "30103:30103"
    expose:
      - "30103"
    environment:
      #SC_ADDRESS: http://service-center:30100
      SC_ADDRESS: http://172.80.0.103:30100
    networks:
      default:
        ipv4_address: 172.80.0.200

  scfrontend1:
    depends_on:
      - service-center1
    image: 'servicecomb/scfrontend:latest'
    links:
      - service-center1
    ports:
      - "30104:30103"
    expose:
      - "30103"
    environment:
      #SC_ADDRESS: http://service-center1:30100
      SC_ADDRESS: http://172.80.0.104:30100
    networks:
      default:
        ipv4_address: 172.80.0.201
  ########################  service-center 集群 end#################################

  zipkin:
    image: openzipkin/zipkin-slim
    ports:
      - 9411:9411
 ######################################################################################################################
  #mongo1:
  #  image: mongo:3.4
  #  restart: always
  #  ports:
  #    - 27018:27017
  #  environment:
  #    MONGO_INITDB_DATABASE: kie
  #    MONGO_INITDB_ROOT_USERNAME: kie
  #    MONGO_INITDB_ROOT_PASSWORD: 123
  #  volumes:
  #    - ./db-lb.js:/docker-entrypoint-initdb.d/db.js:ro
  #mongo-express1:
  #  image: mongo-express
  #  restart: always
  #  ports:
  #    - 8088:8081
  #  environment:
  #    ME_CONFIG_MONGODB_ADMINUSERNAME: kie
  #    ME_CONFIG_MONGODB_ADMINPASSWORD: 123
  #servicecomb-kie1:
  #  image: servicecomb/kie:0.1.0
  #  restart: always
  #  ports:
  #    - 30111:30110
  #  environment:
  #    MONGODB_USER: kie
  #    MONGODB_PWD: 123
  #    MONGODB_ADDR: mongo1

  #https://github.com/apache/servicecomb-service-center/blob/1.3.0/docs/multidcs.md
  #https://github.com/apache/servicecomb-service-center/blob/1.3.0/docs/sc-cluster.md
  ######################################################################################################################
  # zipking start
  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    restart: always
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888 server.2=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-multiple/zoo/data:/data
      - ./zk-single-kafka-multiple/zoo/datalog:/datalog
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    restart: always
    ports:
      - "2281:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888 server.2=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-multiple/zoo1/data:/data
      - ./zk-single-kafka-multiple/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka1
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181,zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./zk-single-kafka-multiple/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo

  kafka2:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka2
    restart: always
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181,zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - ./zk-single-kafka-multiple/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zoo
   # zipking end

  kafka-manager:
    image: dockerkafka/kafka-manager
    links:
      - zoo:zoo
      - zoo1:zoo1
      - kafka1:kafka1
      - kafka2:kafka2
    environment:
      - ZK_HOSTS=zoo:2181,zoo1:2181
      - KAFKA_BROKERS=kafka1:9093,kafka2:9092
    ports:
      - "9000:9000"
    volumes:
      - ./image/conf:/opt/kafka-manager-1.2.7/conf

  ##########注入php微服务
  ### https://apache.org/dyn/closer.cgi/servicecomb/servicecomb-mesher/1.6.3/apache-servicecomb-mesher-1.6.3-src.tar.gz
  mesher-consumer:
    image: gochassis/mesher:1.5rc
    environment:
      CSE_REGISTRY_ADDR: http://service-center:30100
      SERVICE_NAME: "mesher-consumer"
    network_mode: "service:php-client"
    depends_on:
      - php-client
  php-server:
    build: php-microserver/server
    network_mode: "service:mesher-provider"
    depends_on:
      - mesher-provider
  php-client:
    build: php-microserver/client
    environment:
      http_proxy: http://127.0.0.1:30111
    ports:
      - 8888:80
    links:
      - service-center
  mesher-provider:
    image: gochassis/mesher:1.5rc
    environment:
      CSE_REGISTRY_ADDR: http://service-center:30100
      SERVICE_NAME: "hellomesher"
    links:
      - service-center

volumes:
  grafana_data:
  etcd1:
  etcd2:
  etcd3:

networks:
  default:
    external:
      name: etcdnetwork

#openzipkin/zipkin openzipkin/zipkin-slim
#   http://127.0.0.1:30101